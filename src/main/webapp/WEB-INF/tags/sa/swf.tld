<?xml version="1.0" encoding="UTF-8"?>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  ~ This file is part of [SpringAtom] Copyright [kornicameister@gmail.com][2013]                  ~
  ~                                                                                               ~
  ~ [SpringAtom] is free software: you can redistribute it and/or modify                          ~
  ~ it under the terms of the GNU General Public License as published by                          ~
  ~ the Free Software Foundation, either version 3 of the License, or                             ~
  ~ (at your option) any later version.                                                           ~
  ~                                                                                               ~
  ~ [SpringAtom] is distributed in the hope that it will be useful,                               ~
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of                                ~
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                                 ~
  ~ GNU General Public License for more details.                                                  ~
  ~                                                                                               ~
  ~ You should have received a copy of the GNU General Public License                             ~
  ~ along with [SpringAtom].  If not, see <http://www.gnu.org/licenses/gpl.html>.                 ~
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<taglib xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://java.sun.com/xml/ns/j2ee"
        xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"
        version="2.0">

    <description>SpringAtom Webflow support library</description>
    <tlib-version>0.1</tlib-version>
    <short-name>swf</short-name>
    <uri>/WEB-INF/tags/sa/swf.tld</uri>

    <tag>
        <description>
            Tag resolves all possible transitions (possible paths from current state to other states) for
            the StateDefinition set as @param=state
        </description>
        <name>transitions</name>
        <tag-class>org.agatom.springatom.webmvc.flows.tags.PossibleTransitionsTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>state</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>org.springframework.webflow.definition.StateDefinition</type>
        </attribute>
        <attribute>
            <name>var</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Tags resolves all transitions that are not WizardEvent.
            Refer to bean WizardEvents that instantiates a fixed set of WizardEvent beans
        </description>
        <name>dynamicTransitions</name>
        <tag-class>org.agatom.springatom.webmvc.flows.tags.DynamicTransitionsTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>state</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>flow</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>org.springframework.webflow.definition.FlowDefinition</type>
        </attribute>
        <attribute>
            <name>var</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
        Tags resolves all states either being predecessors or successors of the state
            given as attribute. Which states will be resolved depends on the value of the
            variable type.
        </description>
        <name>stateNeighbours</name>
        <tag-class>org.agatom.springatom.webmvc.flows.tags.TransitionResolverTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <description>
                ViewState for which the states will be resolved
            </description>
            <name>state</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>org.springframework.webflow.engine.ViewState</type>
        </attribute>
        <attribute>
            <description>
                It can be one of the following values:
                - predecessors
                - successors
                - all (includes both types of neighbourhood)
            </description>
            <name>type</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>var</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Tag resolves all states of given workflow and set the result in scope=PAGE as
            JSON object
        </description>
        <name>states</name>
        <tag-class>org.agatom.springatom.webmvc.flows.tags.AllStatesOfWebflow</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <description>The FlowDefinition to get states from</description>
            <name>flow</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>org.springframework.webflow.definition.FlowDefinition</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Resolved the state ID {StateDefinition#getId()} from either FlowDefinition
            or StateDefinition.
            If @param=state is set it has got a high hand to retrieve the stateId.
            Otherwise when @param=flow is set the @param=stateId becomes required
        </description>
        <name>stateId</name>
        <tag-class>org.agatom.springatom.webmvc.flows.tags.StateIdTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <description>
                FlowDefinition to extract ID from. If this param is set and @state param is left
                null than it is required to specify state index in given FlowDefinition
            </description>
            <name>flow</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>org.springframework.webflow.definition.FlowDefinition</type>
        </attribute>
        <attribute>
            <description>StateDefinition to extract ID from</description>
            <name>state</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>org.springframework.webflow.definition.StateDefinition</type>
        </attribute>
        <attribute>
            <name>index</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Short</type>
        </attribute>
        <attribute>
            <description>var name to assign requested state ID to</description>
            <name>var</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

</taglib>