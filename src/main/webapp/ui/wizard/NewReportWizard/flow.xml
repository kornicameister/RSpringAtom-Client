<?xml version="1.0" encoding="UTF-8"?>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  ~ This file is part of [SpringAtom] Copyright [kornicameister@gmail.com][2013]                  ~
  ~                                                                                               ~
  ~ [SpringAtom] is free software: you can redistribute it and/or modify                          ~
  ~ it under the terms of the GNU General Public License as published by                          ~
  ~ the Free Software Foundation, either version 3 of the License, or                             ~
  ~ (at your option) any later version.                                                           ~
  ~                                                                                               ~
  ~ [SpringAtom] is distributed in the hope that it will be useful,                               ~
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of                                ~
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                                 ~
  ~ GNU General Public License for more details.                                                  ~
  ~                                                                                               ~
  ~ You should have received a copy of the GNU General Public License                             ~
  ~ along with [SpringAtom].  If not, see <http://www.gnu.org/licenses/gpl.html>.                 ~
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<!--suppress XmlPathReference -->
<flow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      parent="wizard"
      start-state="entity"
      abstract="false"
      xmlns="http://www.springframework.org/schema/webflow"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow
                          http://www.springframework.org/schema/webflow/spring-webflow.xsd">

    <on-start>
        <evaluate expression="'NewReportWizard'" result="flowScope.wizardID"/>
        <evaluate expression="'NewReportWizardForm'" result="flowScope.formID"/>
        <evaluate expression="WizardConfiguration.requiredStepsHolder" result="flowScope.requiredSteps"/>

        <!--init required steps-->
        <evaluate expression="flowScope.requiredSteps.add('entity')"/>
        <evaluate expression="flowScope.requiredSteps.add('pickColumns')"/>
        <evaluate expression="flowScope.requiredSteps.add('moreEntitiesAndColumns')"/>
        <evaluate expression="flowScope.requiredSteps.add('reportDescription')"/>
        <evaluate expression="flowScope.requiredSteps.add('reportOverview')"/>
        <!--init requires steps-->

        <!--init report descriptor-->
        <evaluate expression="reportWizard.init(flowRequestContext)"/>
        <!--init report descriptor-->

        <!--init form actions-->
        <evaluate expression="pickEntityFormAction.init(reportWizard)"/>
        <evaluate expression="pickColumnsFormAction.init(reportWizard)"/>
        <evaluate expression="reportDescriptionFormAction.init(reportWizard)"/>
        <!--init form actions-->

    </on-start>

    <view-state id="entity" view="ui.wizard.NewReportWizard.PickEntity" popup="true">
    <on-render>
            <evaluate expression="pickEntityFormAction.setupForm"/>
        </on-render>
        <transition on="next" bind="true" validate="true" to="pickColumns">
            <evaluate expression="pickEntityFormAction.bindAndValidate"/>
        </transition>
        <transition on="cancel" to="cancel">
            <evaluate expression="pickEntityFormAction.resetForm"/>
        </transition>
    </view-state>

    <view-state id="pickColumns" view="ui.wizard.NewReportWizard.PickColumns" popup="true">
    <on-render>
            <evaluate expression="pickColumnsFormAction.setupForm"/>
        </on-render>

        <transition on="next" to="moreEntitiesAndColumns" validate="true" bind="true">
            <evaluate expression="pickColumnsFormAction.bindAndValidate"/>
        </transition>
        <transition on="previous" to="entity" bind="false" validate="false"/>
        <transition on="cancel" to="cancel" history="invalidate" bind="false">
            <evaluate expression="pickColumnsFormAction.resetForm"/>
        </transition>
    </view-state>

    <view-state id="moreEntitiesAndColumns" view="ui.wizard.NewReportWizard.MoreEntitiesAndColumns" popup="true">
    <on-entry>
            <evaluate expression="reportWizard.report" result="viewScope.report"/>
        </on-entry>
        <transition on="next" to="reportDescription" history="invalidate"/>
        <transition on="previous" to="pickColumns" history="discard">
            <evaluate expression="pickColumnsFormAction.resetForm"/>
        </transition>
    </view-state>

    <view-state id="reportDescription" view="ui.wizard.NewReportWizard.ReportDescription" popup="true">
    <on-entry>
            <evaluate expression="reportDescriptionFormAction.setupForm"/>
        </on-entry>
        <transition on="next" to="reportOverview" validate="true" bind="true" history="invalidate">
            <evaluate expression="reportDescriptionFormAction.bindAndValidate"/>
        </transition>
        <transition on="cancel" to="cancel" history="invalidate" bind="false">
            <evaluate expression="reportDescriptionFormAction.resetForm"/>
        </transition>
    </view-state>

    <view-state id="reportOverview" view="ui.wizard.NewReportWizard.ReportOverview">
    <transition on="finish" to="finish">
            <evaluate expression="reportWizard.saveReport(flowRequestContext)"/>
        </transition>
        <transition on="finishAndGenerate" to="finish">
            <evaluate expression="reportWizard.saveAndGenerateReport(flowRequestContext)"/>
        </transition>
        <transition on="cancel" to="cancel" history="invalidate" bind="false"/>
    </view-state>

    <end-state id="finish"
               view="externalRedirect:/dashboard/reports?wizard=#{flowScope.wizardID}&amp;action=#{currentEvent.id}&amp;report=#{reportWizard.report.name}">
        <output name="report" value="reportWizard.report"/>
    </end-state>
    <end-state id="cancel"
               view="externalRedirect:/dashboard/reports?wizard=#{flowScope.wizardID}&amp;action=#{currentEvent.id}"/>

</flow>