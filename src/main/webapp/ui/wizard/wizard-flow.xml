<?xml version="1.0" encoding="UTF-8"?>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  ~ This file is part of [SpringAtom] Copyright [kornicameister@gmail.com][2013]                  ~
  ~                                                                                               ~
  ~ [SpringAtom] is free software: you can redistribute it and/or modify                          ~
  ~ it under the terms of the GNU General Public License as published by                          ~
  ~ the Free Software Foundation, either version 3 of the License, or                             ~
  ~ (at your option) any later version.                                                           ~
  ~                                                                                               ~
  ~ [SpringAtom] is distributed in the hope that it will be useful,                               ~
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of                                ~
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                                 ~
  ~ GNU General Public License for more details.                                                  ~
  ~                                                                                               ~
  ~ You should have received a copy of the GNU General Public License                             ~
  ~ along with [SpringAtom].  If not, see <http://www.gnu.org/licenses/gpl.html>.                 ~
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<flow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      abstract="true"
      xmlns="http://www.springframework.org/schema/webflow"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd" >

	<on-start >
		<evaluate expression="WizardFinishEvent.eventName" result="flowScope.finishAction" />
		<evaluate expression="WizardCancelEvent.eventName" result="flowScope.cancelAction" />
		<evaluate expression="WizardNextEvent.eventName" result="flowScope.nextAction" />
		<evaluate expression="WizardPreviousEvent.eventName" result="flowScope.previousAction" />
		<evaluate expression="wizardEvents.initialEvents" result="flowScope.wizActions" />
	</on-start >

</flow >